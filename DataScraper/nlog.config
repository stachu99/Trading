<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="info"
      internalLogFile="internal-nlog.txt">

  <!-- Load the ASP.NET Core plugin -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>
  <!-- the targets to write to -->
  <targets>
    <!-- write logs to database SQLite  -->
    <target name="db" xsi:type="Database" dbProvider="Microsoft.Data.Sqlite.SqliteConnection, Microsoft.Data.Sqlite" 
            keepConnection="false" 

      connectionString="${NLogConnectionString}"

      commandText=
      "insert into NLog (
      Application, Logged, Level, Message, Username, ServerName, Port, Url, Https, ServerAddress, RemoteAddress, Logger, CallSite, Exception
      ) values (
      @Application, @Logged, @Level, @Message, @Username, @ServerName, @Port, @Url, @Https, @ServerAddress, @RemoteAddress, @Logger, @CallSite, @Exception
      )">
  
      <parameter name="@Application" layout="${appdomain:format={1\}}" />
      <parameter name="@Logged" layout="${date}" />
      <parameter name="@Level" layout="${level}" />
      <parameter name="@Message" layout="${replace:searchFor=\':replaceWith=\'\':regex=true:inner=${message}}" />
      <parameter name="@Username" layout="${identity}" />
      <parameter name="@ServerName" layout="${aspnet-request:serverVariable=SERVER_NAME}" />
      <parameter name="@Port" layout="${aspnet-request:serverVariable=SERVER_PORT}" />
      <parameter name="@Url" layout="${aspnet-request:serverVariable=HTTP_URL}" />
      <parameter name="@Https" layout="${when:inner=1:when='${aspnet-request:serverVariable=HTTPS}' == 'on'}${when:inner=0:when='${aspnet-request:serverVariable=HTTPS}' != 'on'}" />
      <parameter name="@ServerAddress" layout="${aspnet-request:serverVariable=LOCAL_ADDR}" />
      <parameter name="@RemoteAddress" layout="${aspnet-request:serverVariable=REMOTE_ADDR}:${aspnet-request:serverVariable=REMOTE_PORT}" />
      <parameter name="@Logger" layout="${logger}" />
      <parameter name="@CallSite" layout="${callsite}" />
      <parameter name="@Exception" layout="${exception:tostring}" />
    </target>


    <!-- write to the void aka just remove
    <target xsi:type="Null" name="blackhole" />
    -->
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>

      <!--All logs, including from Microsoft write to DB-->
      <logger name="*" minlevel="Trace" writeTo="db" />

    <!--Skip Microsoft logs and so log only own logs
    <logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />
    <logger name="*" minlevel="Trace" writeTo="ownFile-web" />
    -->
  </rules>
</nlog>